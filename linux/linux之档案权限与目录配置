linux之档案权限与目录配置

Linux檔案屬性
kouzikaile@localhost:~$ ls -al
总用量 1588
drwxr-xr-x 72 kouzikaile kouzikaile   4096 7月   4 14:26 .
drwxr-xr-x  3 root       root         4096 3月  13 02:20 ..
drwxrwxr-x  2 kouzikaile kouzikaile   4096 3月  12 23:50 .android
-rw-------  1 kouzikaile kouzikaile  44003 7月   4 14:04 .bash_history
-rw-r--r--  1 kouzikaile kouzikaile    220 3月  13 02:20 .bash_logout
-rw-r--r--  1 kouzikaile kouzikaile   4346 6月  21 16:10 .bashrc
ls是『list』的意思，重點在顯示檔案的檔名與相關屬性。而選項『-al』則表示列出所有的檔案詳細的權限與屬性 (包含隱藏檔，就是檔名第一個字元為『 . 』的檔案)。

第一欄代表這個檔案的類型與權限(permission)：
這個地方最需要注意了！仔細看的話，你應該可以發現這一欄其實共有十個字元：

第一個字元代表這個檔案是『目錄、檔案或連結檔等等』：
    當為[ d ]則是目錄，例如上表檔名為『.android』的那一行；
    當為[ - ]則是檔案，例如上表檔名為『.bash_history』那一行；
    若是[ l ]則表示為連結檔(link file)；
    若是[ b ]則表示為裝置檔裡面的可供儲存的周邊設備(可隨機存取裝置)；
    若是[ c ]則表示為裝置檔裡面的序列埠設備，例如鍵盤、滑鼠(一次性讀取裝置)。

接下來的字元中，以三個為一組，且均為『rwx』 的三個參數的組合。其中，[ r ]代表可讀(read)、[ w ]代表可寫(write)、[ x ]代表可執行(execute)。 要注意的是，這三個權限的位置不會改變，如果沒有權限，就會出現減號[ - ]而已。
    第一組為『檔案擁有者可具備的權限』，以『.bash_logout』那個檔案為例， 該檔案的擁有者可以讀寫，但不可執行；
    第二組為『加入此群組之帳號的權限』；
    第三組為『非本人且沒有加入本群組之其他帳號的權限』。

例題：
若有一個檔案的類型與權限資料為『-rwxr-xr--』，請說明其意義為何？
答：
先將整個類型與權限資料分開查閱，並將十個字元整理成為如下所示：
[-][rwx][r-x][r--]
 1  234  567  890
 
 1 為：代表這個檔名為目錄或檔案，本例中為檔案(-)；
234為：擁有者的權限，本例中為可讀、可寫、可執行(rwx)；
567為：同群組使用者權限，本例中為可讀可執行(rx)；
890為：其他使用者權限，本例中為可讀(r)，就是唯讀之意
同時注意到，rwx所在的位置是不會改變的，有該權限就會顯示字元，沒有該權限就變成減號(-)就是了。

第二欄表示有多少檔名連結到此節點(i-node)：
每個檔案都會將他的權限與屬性記錄到檔案系統的i-node中，不過，我們使用的目錄樹卻是使用檔名來記錄， 因此每個檔名就會連結到一個i-node囉！這個屬性記錄的，就是有多少不同的檔名連結到相同的一個i-node號碼去就是了。 

第三欄表示這個檔案(或目錄)的『擁有者帳號』

第四欄表示這個檔案的所屬群組
在Linux系統下，你的帳號會加入於一個或多個的群組中。舉剛剛我們提到的例子，class1, class2, class3均屬於projecta這個群組，假設某個檔案所屬的群組為projecta，且該檔案的權限如圖5.2.2所示(-rwxrwx---)， 則class1, class2, class3三人對於該檔案都具有可讀、可寫、可執行的權限(看群組權限)。 但如果是不屬於projecta的其他帳號，對於此檔案就不具有任何權限了。

第五欄為這個檔案的容量大小，預設單位為bytes；

第六欄為這個檔案的建檔日期或者是最近的修改日期：
這一欄的內容分別為日期(月/日)及時間。如果這個檔案被修改的時間距離現在太久了，那麼時間部分會僅顯示年份而已。 
[root@study ~]# ll /etc/services /root/initial-setup-ks.cfg
-rw-r--r--. 1 root root 670293 Jun  7  2013 /etc/services
-rw-r--r--. 1 root root   1864 May  4 18:01 /root/initial-setup-ks.cfg
# 如上所示，/etc/services 為 2013 年所修改過的檔案，離現在太遠之故，所以只顯示年份；
# 至於 /root/initial-setup-ks.cfg 是今年 (2015) 所建立的，所以就顯示完整的時間了。

如果想要顯示完整的時間格式，可以利用ls的選項，亦即：『ls -l --full-time』就能夠顯示出完整的時間格式了！包括年、月、日、時間喔。 另外，如果你當初是以繁體中文安裝你的Linux系統，那麼日期欄位將會以中文來顯示。 可惜的是，中文並沒有辦法在純文字的終端機模式中正確的顯示，所以此欄會變成亂碼。 那你就得要使用『export LC_ALL=en_US.utf8』來修改語系喔！

如果想要讓系統預設的語系變成英文的話，那麼你可以修改系統設定檔『/etc/locale.conf』，利用第四章談到的nano來修改該檔案的內容，使LANG這個變數成為上述的內容即可。

第七欄為這個檔案的檔名
這個欄位就是檔名了。比較特殊的是：如果檔名之前多一個『 . 』，則代表這個檔案為『隱藏檔』，例如上表中的.config那一行，該檔案就是隱藏檔。 你可以使用『ls』及『ls -a』這兩個指令去感受一下什麼是隱藏檔囉！

例題：
假設test1, test2, test3同屬於testgroup這個群組，如果有下面的兩個檔案，請說明兩個檔案的擁有者與其相關的權限為何？
-rw-r--r--  1 root     root          238 Jun 18 17:22 test.txt 
-rwxr-xr--  1 test1    testgroup    5238 Jun 19 10:25 ping_tsai
答：
檔案test.txt的擁有者為root，所屬群組為root。至於權限方面則只有root這個帳號可以存取此檔案，其他人則僅能讀此檔案；

另一個檔案ping_tsai的擁有者為test1，而所屬群組為testgroup。其中：
test1 可以針對此檔案具有可讀可寫可執行的權力；
而同群組的test2, test3兩個人與test1同樣是testgroup的群組帳號，則僅可讀可執行但不能寫(亦即不能修改)；
至於沒有加入testgroup這一個群組的其他人則僅可以讀，不能寫也不能執行！

例題：
承上一題如果我的目錄為底下的樣式，請問testgroup這個群組的成員與其他人(others)是否可以進入本目錄？
    drwxr-xr--   1 test1    testgroup    5238 Jun 19 10:25 groups/
答：
檔案擁有者test1[rwx]可以在本目錄中進行任何工作；
而testgroup這個群組[r-x]的帳號，例如test2, test3亦可以進入本目錄進行工作，但是不能在本目錄下進行寫入的動作；
至於other的權限中[r--]雖然有r ，但是由於沒有x的權限，因此others的使用者，並不能進入此目錄！

Linux檔案權限的重要性：
系統保護的功能：
舉個簡單的例子，在你的系統中，關於系統服務的檔案通常只有root才能讀寫或者是執行，例如/etc/shadow這一個帳號管理的檔案，由於該檔案記錄了你系統中所有帳號的資料， 因此是很重要的一個設定檔，當然不能讓任何人讀取(否則密碼會被竊取啊)，只有root才能夠來讀取囉！所以該檔案的權限就會成為[ ---------- ]囉！咦！所有人都不能使用？沒關係，root基本上是不受系統的權限所限制的， 所以無論檔案權限為何，預設root都可以存取喔！

團隊開發軟體或資料共用的功能：
此外，如果你有一個軟體開發團隊，在你的團隊中，你希望每個人都可以使用某一些目錄下的檔案， 而非你的團隊的其他人則不予以開放呢？以上面的例子來說，testgroup的團隊共有三個人，分別是test1, test2, test3，那麼我就可以將團隊所需的檔案權限訂為[ -rwxrws--- ]來提供給testgroup的工作團隊使用囉！(怎麼會有 s 呢？沒關係，這個我們在後續章節再講給你聽！)

未將權限設定妥當的危害：
再舉個例子來說，如果你的目錄權限沒有作好的話，可能造成其他人都可以在你的系統上面亂搞囉！ 例如本來只有root才能做的開關機、ADSL的撥接程式、新增或刪除使用者等等的指令，若被你改成任何人都可以執行的話， 那麼如果使用者不小心給你重新開機啦！重新撥接啦！等等的！那麼你的系統不就會常常莫名其妙的掛掉囉！ 而且萬一你的使用者的密碼被其他不明人士取得的話，只要他登入你的系統就可以輕而易舉的執行一些root的工作！

如何改變檔案屬性與權限
chgrp ：改變檔案所屬群組
chown ：改變檔案擁有者
chmod ：改變檔案的權限, SUID, SGID, SBIT等等的特性

改變所屬群組, chgrp
改變一個檔案的群組真是很簡單的，直接以chgrp來改變即可，咦！這個指令就是change group的縮寫嘛！這樣就很好記了吧！ ^_^。不過，請記得，要被改變的群組名稱必須要在/etc/group檔案內存在才行，否則就會顯示錯誤！

假設你已經是root的身份了，那麼在你的家目錄內有一個名為 initial-setup-ks.cfg 的檔案， 如何將該檔案的群組改變一下呢？假設你已經知道在/etc/group裡面已經存在一個名為users的群組， 但是testing這個群組名字就不存在/etc/group當中了，此時改變群組成為users與testing分別會有什麼現象發生呢？
[root@study ~]# chgrp [-R] dirname/filename ...
選項與參數：
-R : 進行遞迴(recursive)的持續變更，亦即連同次目錄下的所有檔案、目錄
     都更新成為這個群組之意。常常用在變更某一目錄內所有的檔案之情況。
範例：
[root@study ~]# chgrp users initial-setup-ks.cfg
[root@study ~]# ls -l
-rw-r--r--. 1 root users 1864 May  4 18:01 initial-setup-ks.cfg
[root@study ~]# chgrp testing initial-setup-ks.cfg
chgrp: invalid group:  'testing' <== 發生錯誤訊息囉～找不到這個群組名～

改變檔案擁有者, chown
如何改變一個檔案的擁有者呢？很簡單呀！既然改變群組是change group，那麼改變擁有者就是change owner囉！BINGO！那就是chown這個指令的用途，要注意的是， 使用者必須是已經存在系統中的帳號，也就是在/etc/passwd 這個檔案中有紀錄的使用者名稱才能改變。

chown的用途還滿多的，他還可以順便直接修改群組的名稱呢！此外，如果要連目錄下的所有次目錄或檔案同時更改檔案擁有者的話，直接加上 -R 的選項即可！我們來看看語法與範例：

[root@study ~]# chown [-R] 帳號名稱 檔案或目錄
[root@study ~]# chown [-R] 帳號名稱:群組名稱 檔案或目錄
選項與參數：
-R : 進行遞迴(recursive)的持續變更，亦即連同次目錄下的所有檔案都變更

範例：將 initial-setup-ks.cfg 的擁有者改為bin這個帳號：
[root@study ~]# chown bin initial-setup-ks.cfg
[root@study ~]# ls -l
-rw-r--r--. 1 bin  users 1864 May  4 18:01 initial-setup-ks.cfg

範例：將 initial-setup-ks.cfg 的擁有者與群組改回為root：
[root@study ~]# chown root:root initial-setup-ks.cfg
[root@study ~]# ls -l
-rw-r--r--. 1 root root 1864 May  4 18:01 initial-setup-ks.cfg